{"version":3,"file":"static/js/614.044e6ada.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","redux/contatcs/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormWrap,\n  Field as Input,\n  ErrorMessage as Error,\n} from 'formik';\n\nexport const Form = styled(FormWrap)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 380px;\n  margin-bottom: 10px;\n`;\n\nexport const Field = styled(Input)`\n  font-size: 22px;\n  width: 292px;\n`;\n\nexport const Label = styled.label`\n  font-size: 25px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ErrorMessage = styled(Error)``;\n\nexport const Button = styled.button`\n  width: 300px;\n  height: 30px;\n  font-size: 22px;\n  cursor: pointer;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Field, ErrorMessage, Label, Button } from './ContactForm.styled';\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contatcs/operations';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required(),\n  number: Yup.number().required(),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={schema}\n      onSubmit={(values, { resetForm }) => {\n        dispatch(addContact(values));\n        resetForm();\n      }}\n    >\n      <Form>\n        <Label htmlFor=\"name\">\n          Name\n          <Field\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage component=\"div\" name=\"name\" />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErrorMessage component=\"div\" name=\"name\" />\n        </Label>\n\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </Formik>\n  );\n};\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n`;\n\nexport const Item = styled.li`\n  font-size: 25px;\n  padding-bottom: 10px;\n  display: flex;\n\n  align-items: center;\n\n  svg {\n    padding-right: 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 25px;\n  height: 25px;\n  outline: none;\n  margin-left: 10px;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 0px;\n  background-color: inherit;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    padding: 0;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContact = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterContact = state => state.filter;\n\nexport const findFilteredContact = createSelector(\n  [selectContact, selectFilterContact],\n  (contacts, filter) => {\n    if (filter) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n      );\n    }\n    return contacts;\n  }\n);\n","import { IoIosContact } from 'react-icons/io';\nimport React from 'react';\nimport { List, Item, Button } from './ContactList.styled';\nimport { AiFillDelete } from 'react-icons/ai';\n\nimport { deleteContact } from 'redux/contatcs/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findFilteredContact } from 'redux/contatcs/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(findFilteredContact);\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <IoIosContact />\n          {name} : {number}\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            <AiFillDelete />\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  font-size: 22px;\n  width: 292px;\n  margin-top: 5px;\n`;\n","import React from 'react';\nimport { Label, Input } from './Filter.styled';\nimport { filterContacts } from 'redux/contatcs/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label htmlFor=\"text\">\n      Find contacts by name\n      <Input\n        name=\"text\"\n        onChange={e => dispatch(filterContacts(e.target.value))}\n      ></Input>\n    </Label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contatcs/operations';\nimport { selectError, selectIsLoading } from 'redux/contatcs/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <section>\n        <ContactForm />\n        {isLoading && !error && <b>Loading...</b>}\n        <Filter />\n        <ContactList />\n      </section>\n    </div>\n  );\n}\n"],"names":["Form","styled","FormWrap","Field","Input","Label","ErrorMessage","Error","Button","schema","Yup","shape","name","required","number","ContactForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","addContact","htmlFor","id","type","pattern","title","component","List","Item","selectIsLoading","state","contacts","isLoading","selectError","error","findFilteredContact","createSelector","filter","contact","toLowerCase","includes","trim","ContactList","useSelector","map","onClick","deleteContact","Filter","onChange","e","filterContacts","target","value","Contacts","useEffect","fetchContacts"],"sourceRoot":""}